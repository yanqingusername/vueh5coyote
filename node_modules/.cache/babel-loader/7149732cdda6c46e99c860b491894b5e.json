{"remainingRequest":"/Users/user/coyote/vue-h5-template/node_modules/babel-loader/lib/index.js!/Users/user/coyote/vue-h5-template/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/coyote/vue-h5-template/src/request/http.js","dependencies":[{"path":"/Users/user/coyote/vue-h5-template/src/request/http.js","mtime":1648371578708},{"path":"/Users/user/coyote/vue-h5-template/node_modules/cache-loader/dist/cjs.js","mtime":1647851357606},{"path":"/Users/user/coyote/vue-h5-template/node_modules/babel-loader/lib/index.js","mtime":1647851357560},{"path":"/Users/user/coyote/vue-h5-template/node_modules/eslint-loader/index.js","mtime":1647851374027}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwoKLyoqYXhpb3PlsIHoo4UKICog6K+35rGC5oum5oiq44CB55u45bqU5oum5oiq44CB6ZSZ6K+v57uf5LiA5aSE55CGCiAqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBOb3RpZnkgfSBmcm9tICd2YW50JzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXIvaW5kZXgnOyAvLyDnjq/looPnmoTliIfmjaIKLy8gYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEk7CgpheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gJ2h0dHA6Ly95Z2xkZXYuY295b3RlYmlvLWxhYi5jb206ODA4MC9zdG9yZW1hbmFnZSc7IC8vIOivt+axgui2heaXtuaXtumXtAoKYXhpb3MuZGVmYXVsdHMudGltZW91dCA9IDEwMDAwOwpheGlvcy5kZWZhdWx0cy5jcmV3aXRoZGVudGlhbHMgPSB0cnVlOyAvLyBwb3N06K+35rGC5aS0CgpheGlvcy5kZWZhdWx0cy5oZWFkZXJzLnBvc3RbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nOyAvLyDor7fmsYLmi6bmiKrlmagKCmF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIFByb21pc2UuZXJyb3IoZXJyb3IpOwp9KTsgLy8g5ZON5bqU5oum5oiq5ZmoCgpheGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIC8vIGNvbnNvbGUubG9nKCJyZXNwb25zZSIscmVzcG9uc2UpCiAgdmFyIHN0YXR1cyA9IHJlc3BvbnNlLnN0YXR1czsKCiAgaWYgKHN0YXR1cyA9PT0gMjAwKSB7CiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTsKICB9IGVsc2UgaWYgKHN0YXR1cyA9PT0gNDAxIHx8IHN0YXR1cyA9PT0gNDAzKSB7CiAgICBOb3RpZnkoewogICAgICB0eXBlOiAncHJpbWFyeScsCiAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEubXNnCiAgICB9KTsgLy8g6Lez6L2s55m75b2V6aG16Z2i77yM5bm25bCG6KaB5rWP6KeI55qE6aG16Z2iZnVsbFBhdGjkvKDov4fljrvvvIznmbvlvZXmiJDlip/lkI7ot7PovazpnIDopoHorr/pl67nmoTpobXpnaIKCiAgICByb3V0ZXIucmVwbGFjZSh7CiAgICAgIHBhdGg6ICcvbG9naW4nCiAgICB9KTsKICB9IGVsc2UgewogICAgTm90aWZ5KHsKICAgICAgdHlwZTogJ3ByaW1hcnknLAogICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLm1zZwogICAgfSk7CiAgfQp9LCAvLyDmnI3liqHlmajnirbmgIHnoIHkuI3mmK8yMDDnmoTmg4XlhrUgICAgCmZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCJlcnJvciIsIGVycm9yKTsKfSk7Ci8qKiAKICogZ2V05pa55rOV77yM5a+55bqUZ2V06K+35rGCIAogKiBAcGFyYW0ge1N0cmluZ30gdXJsIFvor7fmsYLnmoR1cmzlnLDlnYBdIAogKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIFvor7fmsYLml7bmkLrluKbnmoTlj4LmlbBdIAogKi8KCmV4cG9ydCBmdW5jdGlvbiBnZXQodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgYXhpb3MuZ2V0KHVybCwgewogICAgICBwYXJhbXM6IHBhcmFtcwogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyLmRhdGEpOwogICAgfSk7CiAgfSk7Cn0KLyoqIAogKiBwb3N05pa55rOV77yM5a+55bqUcG9zdOivt+axgiAKICogQHBhcmFtIHtTdHJpbmd9IHVybCBb6K+35rGC55qEdXJs5Zyw5Z2AXSAKICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyBb6K+35rGC5pe25pC65bim55qE5Y+C5pWwXSAKICovCgpleHBvcnQgZnVuY3Rpb24gcG9zdCh1cmwsIHBhcmFtcykgewogIC8vIGNvbnNvbGUubG9nKHBhcmFtcykKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgYXhpb3MucG9zdCh1cmwsIHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyLmRhdGEpOwogICAgfSk7CiAgfSk7Cn0KLyoqIAogKiBwdXTmlrnms5XvvIzlr7nlupRwdXTor7fmsYIgCiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgW+ivt+axgueahHVybOWcsOWdgF0gCiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgW+ivt+axguaXtuaQuuW4pueahOWPguaVsF0gCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHB1dCh1cmwsIHBhcmFtcykgewogIC8vIGNvbnNvbGUubG9nKHBhcmFtcykKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgYXhpb3MucHV0KHVybCwgcGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmVzb2x2ZShyZXMuZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJlamVjdChlcnIuZGF0YSk7CiAgICB9KTsKICB9KTsKfQovKiogCiAqIGRlbGV0ZeaWueazle+8jOWvueW6lGRlbGV0Zeivt+axgiAKICogQHBhcmFtIHtTdHJpbmd9IHVybCBb6K+35rGC55qEdXJs5Zyw5Z2AXSAKICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyBb6K+35rGC5pe25pC65bim55qE5Y+C5pWwXSAKICovCgpleHBvcnQgZnVuY3Rpb24gZGVsZXQodXJsLCBwYXJhbXMpIHsKICAvLyBjb25zb2xlLmxvZyhwYXJhbXMpCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGF4aW9zLmRlbGV0ZSh1cmwsIHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyLmRhdGEpOwogICAgfSk7CiAgfSk7Cn0="},{"version":3,"sources":["/Users/user/coyote/vue-h5-template/src/request/http.js"],"names":["axios","Notify","router","defaults","baseURL","timeout","crewithdentials","headers","post","interceptors","request","use","config","error","Promise","response","status","resolve","type","message","data","msg","replace","path","console","log","get","url","params","reject","then","res","catch","err","put","delet","delete"],"mappings":"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","sourcesContent":["/**axios封装\n * 请求拦截、相应拦截、错误统一处理\n */\nimport axios from 'axios';\nimport { Notify } from 'vant';\nimport router from '../router/index'\n// 环境的切换\n// axios.defaults.baseURL = process.env.VUE_APP_BASE_API;\naxios.defaults.baseURL = 'http://ygldev.coyotebio-lab.com:8080/storemanage';\n\n// 请求超时时间\naxios.defaults.timeout = 10000;\n\n\naxios.defaults.crewithdentials = true;\n\n// post请求头\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// 请求拦截器\naxios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.error(error);\n    })\n// 响应拦截器\naxios.interceptors.response.use(\n    response => {\n        // console.log(\"response\",response)\n        const status = response.status\n        if(status === 200){\n            return Promise.resolve(response);\n        }else if(status === 401||status === 403){\n            Notify({ type: 'primary', message:  response.data.msg});\n            // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面\n            router.replace({\n                path: '/login'\n            });\n        }else{\n            Notify({ type: 'primary', message:  response.data.msg});\n        }\n    },\n    // 服务器状态码不是200的情况    \n    error => {\n        console.log(\"error\",error)\n    }\n);\n/** \n * get方法，对应get请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function get(url, params) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n                params\n            })\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}\n/** \n * post方法，对应post请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function post(url, params) {\n    // console.log(params)\n    return new Promise((resolve, reject) => {\n        axios.post(url, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}\n\n/** \n * put方法，对应put请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function put(url, params) {\n    // console.log(params)\n    return new Promise((resolve, reject) => {\n        axios.put(url, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}\n\n/** \n * delete方法，对应delete请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function delet(url, params) {\n    // console.log(params)\n    return new Promise((resolve, reject) => {\n        axios.delete(url, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}"]}]}